import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, ConversationHandler, CallbackContext
from telegram.ext.filters import Filters
from config import BOT_TOKEN, ADMINS, LANGUAGES, DEFAULT_LANGUAGE
from db import save_observation, get_all_observations
import pandas as pd
from io import StringIO

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

PHOTO, DATE, LOCATION = range(3)

# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞
def start(update: Update, context: CallbackContext):
    user = update.message.from_user
    language = DEFAULT_LANGUAGE  # –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –æ–ø—ã–ª–∏—Ç–µ–ª—è üêù")
    return PHOTO

# –ü—Ä–∏–µ–º —Ñ–æ—Ç–æ
def photo(update: Update, context: CallbackContext):
    user = update.message.from_user
    context.user_data['photo'] = update.message.photo[-1].file_id
    update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –£–∫–∞–∂–∏ –¥–∞—Ç—É –Ω–∞–±–ª—é–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-04-13) –∏–ª–∏ –Ω–∞–∂–º–∏ '–°–µ–≥–æ–¥–Ω—è'.")
    return DATE

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
def date(update: Update, context: CallbackContext):
    date = update.message.text
    context.user_data['date'] = date
    update.message.reply_text("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∞–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.")
    return LOCATION

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏
def location(update: Update, context: CallbackContext):
    if update.message.location:
        context.user_data['latitude'] = update.message.location.latitude
        context.user_data['longitude'] = update.message.location.longitude
    else:
        context.user_data['address'] = update.message.text

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    save_observation(
        user_id=update.message.from_user.id,
        photo_file_id=context.user_data['photo'],
        date=context.user_data['date'],
        latitude=context.user_data.get('latitude'),
        longitude=context.user_data.get('longitude'),
        address=context.user_data.get('address')
    )
    update.message.reply_text("–ù–∞–±–ª—é–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ üíö")
    return ConversationHandler.END

# –≠–∫—Å–ø–æ—Ä—Ç CSV –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
def export(update: Update, context: CallbackContext):
    if update.message.from_user.id not in ADMINS:
        update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    observations = get_all_observations()
    df = pd.DataFrame(observations)
    csv = df.to_csv(index=False)
    file = StringIO(csv)
    update.message.reply_document(document=file, filename="observations.csv")
    
# –û—à–∏–±–∫–∞
def cancel(update: Update, context: CallbackContext):
    update.message.reply_text("–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dispatcher = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler("export", export))
    
    # –†–∞–∑–¥–µ–ª –¥–∏–∞–ª–æ–≥–∞
    conversation_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            PHOTO: [MessageHandler(Filters.photo, photo)],
            DATE: [MessageHandler(Filters.text & ~Filters.command, date)],
            LOCATION: [MessageHandler(Filters.text | Filters.location, location)]
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )
    
    dispatcher.add_handler(conversation_handler)
    
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
